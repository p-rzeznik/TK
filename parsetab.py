
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocIFSnonassocELSEright=ADDASSIGNSUBASSIGNMULASSIGNDIVASSIGNleftUNEQUALEQUALleft<>LESSEQUALGREATEREQUALleft+-leftDOTADDDOTSUBleft*/leftDOTMULDOTDIVADDASSIGN BREAK COMMENT CONTINUE DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQUAL EYE FLOATNUMBER FOR GREATEREQUAL ID IF IFS LESSEQUAL MULASSIGN NUMBER ONES PRINT RETURN STRING SUBASSIGN UNEQUAL WHILE ZEROSstart : LINELINE : IDX \';\' LINE\n            | IFX LINE\n            | WHILEX LINE\n            | FORX LINE\n            | RETURNX \';\' LINE\n            | PRINTX \';\' LINE\n            | BLOCK LINE\n            | EMPTYONELINE : IDX \';\'\n                | IFX\n                | WHILEX\n                | FORX\n                | RETURNX \';\'\n                | PRINTX \';\' BLOCK : \'{\' LINE \'}\' EMPTY :IDX : ID \'=\' EXPRESSION\n           | ID \'=\' MATRIX\n           | ID \'=\' TABLE\n           | ID \'[\' EXPRESSION \']\' \'=\' EXPRESSION\n           | ID \'[\' EXPRESSION \',\' EXPRESSION \']\' \'=\' EXPRESSIONIDX : ID ADDASSIGN EXPRESSION\n           | ID SUBASSIGN EXPRESSION\n           | ID MULASSIGN EXPRESSION\n           | ID DIVASSIGN EXPRESSION ZEROSX : ZEROS \'(\' EXPRESSION \')\'ONESX : ONES \'(\' EXPRESSION \')\'EYEX : EYE \'(\' EXPRESSION \')\'MATRIX : \'[\' MATRIXINSIDE \']\'\n                | MATRIXEXPR\n                | ZEROSX\n                | ONESX\n                | EYEXMATRIXINSIDE : TABLE \',\' MATRIXINSIDE\n                    | TABLETABLE : \'[\' VALUES \']\'VALUES :  EXPRESSION \',\' VALUES\n            | EXPRESSIONMATRIXEXPR : EXPRESSION DOTADD EXPRESSION\n               | EXPRESSION DOTSUB EXPRESSION\n               | EXPRESSION DOTMUL EXPRESSION\n               | EXPRESSION DOTDIV EXPRESSION\n               | EXPRESSION "\'" IFX :    IF \'(\' CONDITION \')\' ONELINE %prec IFS\n            |   IF \'(\' CONDITION \')\' BLOCK %prec IFS\n            |   IF \'(\' CONDITION \')\' ONELINE ELSE ONELINE\n            |   IF \'(\' CONDITION \')\' ONELINE ELSE BLOCK\n            |   IF \'(\' CONDITION \')\' BLOCK ELSE ONELINE\n            |   IF \'(\' CONDITION \')\' BLOCK ELSE BLOCK LOOPLINE : IDX \';\' LOOPLINE\n                | WHILEX LOOPLINE\n                | FORX LOOPLINE\n                | RETURNX \';\' LOOPLINE\n                | PRINTX \';\' LOOPLINE\n                | LOOPBLOCK LOOPLINE\n                | EMPTY\n                | LOOPIFX LOOPLINE\n                | BREAK \';\' LOOPLINE\n                | CONTINUE \';\' LOOPLINEONELOOPLINE : IDX \';\'\n                    | WHILEX\n                    | FORX\n                    | RETURNX \';\'\n                    | PRINTX \';\'\n                    | LOOPIFX\n                    | BREAK \';\'\n                    | CONTINUE \';\' LOOPBLOCK : \'{\' LOOPLINE \'}\'LOOPIFX :    IF \'(\' CONDITION \')\' ONELOOPLINE %prec IFS\n                |   IF \'(\' CONDITION \')\' LOOPBLOCK %prec IFS\n                |   IF \'(\' CONDITION \')\' ONELOOPLINE ELSE ONELOOPLINE\n                |   IF \'(\' CONDITION \')\' ONELOOPLINE ELSE LOOPBLOCK\n                |   IF \'(\' CONDITION \')\' LOOPBLOCK ELSE ONELOOPLINE\n                |   IF \'(\' CONDITION \')\' LOOPBLOCK ELSE LOOPBLOCK WHILEX : WHILE \'(\' CONDITION \')\' ONELOOPLINE\n                | WHILE \'(\' CONDITION \')\' LOOPBLOCKFORX : FOR ID \'=\' EXPRESSION \':\' EXPRESSION ONELOOPLINE\n            | FOR ID \'=\' EXPRESSION \':\' EXPRESSION LOOPBLOCKCONDITION : EXPRESSION EQUAL EXPRESSION\n                    | EXPRESSION UNEQUAL EXPRESSION\n                    | EXPRESSION LESSEQUAL EXPRESSION\n                    | EXPRESSION GREATEREQUAL EXPRESSION\n                    | EXPRESSION \'>\' EXPRESSION\n                    | EXPRESSION \'<\' EXPRESSION PRINTX : PRINT PRINTMANY PRINTMANY :  STRING\n                |  EXPRESSION\n                |  STRING \',\' PRINTMANY\n                |  EXPRESSION \',\' PRINTMANYRETURNX : RETURN EXPRESSION EXPRESSION : NUMBEREXPRESSION : FLOATNUMBEREXPRESSION : IDEXPRESSION : EXPRESSION \'+\' EXPRESSION\n                  | EXPRESSION \'-\' EXPRESSIONEXPRESSION : EXPRESSION \'*\' EXPRESSION\n                  | EXPRESSION \'/\' EXPRESSIONEXPRESSION : \'(\' EXPRESSION \')\'EXPRESSION : \'-\' EXPRESSION'
    
_lr_action_items = {'ID':([0,4,5,6,9,14,15,16,17,18,22,23,25,26,27,28,29,30,31,32,35,36,37,38,39,50,66,67,68,69,70,71,73,74,75,76,77,78,79,81,86,87,88,90,91,92,93,94,95,96,97,98,100,101,102,103,104,114,118,120,121,123,124,125,134,135,137,138,141,144,146,154,155,156,157,158,159,160,161,162,163,166,167,170,172,175,176,177,178,179,180,181,182,183,186,187,190,191,193,194,201,202,203,204,205,206,207,208,209,],[11,11,11,11,11,33,37,37,11,11,11,11,37,37,37,37,37,37,37,37,-92,-93,-94,37,37,37,37,37,37,37,37,-100,37,37,-16,37,37,37,37,37,37,37,37,37,11,37,37,37,37,37,37,11,-95,-96,-97,-98,-99,37,37,-45,-46,-11,-12,-13,-76,-77,-62,-63,-66,11,37,11,11,-10,-14,-15,-61,-64,-65,-67,-68,11,11,11,11,37,11,37,-47,-48,-50,-49,-69,11,11,11,11,11,-78,-79,11,-70,-71,11,11,-72,-73,-75,-74,]),'IF':([0,4,5,6,9,17,18,22,23,35,36,37,71,75,91,98,100,101,102,103,104,120,121,123,124,125,134,135,137,138,141,144,154,155,156,157,158,159,160,161,162,163,166,167,170,172,176,178,179,180,181,182,183,186,187,190,191,193,194,201,202,203,204,205,206,207,208,209,],[12,12,12,12,12,12,12,12,12,-92,-93,-94,-100,-16,12,145,-95,-96,-97,-98,-99,-45,-46,-11,-12,-13,-76,-77,-62,-63,-66,145,12,12,-10,-14,-15,-61,-64,-65,-67,-68,145,145,145,145,145,-47,-48,-50,-49,-69,145,145,145,145,145,-78,-79,145,-70,-71,145,145,-72,-73,-75,-74,]),'WHILE':([0,4,5,6,9,17,18,22,23,35,36,37,71,75,91,98,100,101,102,103,104,120,121,123,124,125,134,135,137,138,141,144,154,155,156,157,158,159,160,161,162,163,166,167,170,172,176,178,179,180,181,182,183,186,187,190,191,193,194,201,202,203,204,205,206,207,208,209,],[13,13,13,13,13,13,13,13,13,-92,-93,-94,-100,-16,13,13,-95,-96,-97,-98,-99,-45,-46,-11,-12,-13,-76,-77,-62,-63,-66,13,13,13,-10,-14,-15,-61,-64,-65,-67,-68,13,13,13,13,13,-47,-48,-50,-49,-69,13,13,13,13,13,-78,-79,13,-70,-71,13,13,-72,-73,-75,-74,]),'FOR':([0,4,5,6,9,17,18,22,23,35,36,37,71,75,91,98,100,101,102,103,104,120,121,123,124,125,134,135,137,138,141,144,154,155,156,157,158,159,160,161,162,163,166,167,170,172,176,178,179,180,181,182,183,186,187,190,191,193,194,201,202,203,204,205,206,207,208,209,],[14,14,14,14,14,14,14,14,14,-92,-93,-94,-100,-16,14,14,-95,-96,-97,-98,-99,-45,-46,-11,-12,-13,-76,-77,-62,-63,-66,14,14,14,-10,-14,-15,-61,-64,-65,-67,-68,14,14,14,14,14,-47,-48,-50,-49,-69,14,14,14,14,14,-78,-79,14,-70,-71,14,14,-72,-73,-75,-74,]),'RETURN':([0,4,5,6,9,17,18,22,23,35,36,37,71,75,91,98,100,101,102,103,104,120,121,123,124,125,134,135,137,138,141,144,154,155,156,157,158,159,160,161,162,163,166,167,170,172,176,178,179,180,181,182,183,186,187,190,191,193,194,201,202,203,204,205,206,207,208,209,],[15,15,15,15,15,15,15,15,15,-92,-93,-94,-100,-16,15,15,-95,-96,-97,-98,-99,-45,-46,-11,-12,-13,-76,-77,-62,-63,-66,15,15,15,-10,-14,-15,-61,-64,-65,-67,-68,15,15,15,15,15,-47,-48,-50,-49,-69,15,15,15,15,15,-78,-79,15,-70,-71,15,15,-72,-73,-75,-74,]),'PRINT':([0,4,5,6,9,17,18,22,23,35,36,37,71,75,91,98,100,101,102,103,104,120,121,123,124,125,134,135,137,138,141,144,154,155,156,157,158,159,160,161,162,163,166,167,170,172,176,178,179,180,181,182,183,186,187,190,191,193,194,201,202,203,204,205,206,207,208,209,],[16,16,16,16,16,16,16,16,16,-92,-93,-94,-100,-16,16,16,-95,-96,-97,-98,-99,-45,-46,-11,-12,-13,-76,-77,-62,-63,-66,16,16,16,-10,-14,-15,-61,-64,-65,-67,-68,16,16,16,16,16,-47,-48,-50,-49,-69,16,16,16,16,16,-78,-79,16,-70,-71,16,16,-72,-73,-75,-74,]),'{':([0,4,5,6,9,17,18,22,23,35,36,37,71,75,91,98,100,101,102,103,104,120,121,123,124,125,134,135,137,138,141,144,154,155,156,157,158,159,160,161,162,163,166,167,170,172,176,178,179,180,181,182,183,186,187,190,191,193,194,201,202,203,204,205,206,207,208,209,],[17,17,17,17,17,17,17,17,17,-92,-93,-94,-100,-16,17,144,-95,-96,-97,-98,-99,-45,-46,-11,-12,-13,-76,-77,-62,-63,-66,144,17,17,-10,-14,-15,-61,-64,-65,-67,-68,144,144,144,144,144,-47,-48,-50,-49,-69,144,144,144,144,144,-78,-79,144,-70,-71,144,144,-72,-73,-75,-74,]),'$end':([0,1,2,4,5,6,9,10,18,19,20,21,22,23,24,44,45,46,75,120,121,123,124,125,134,135,137,138,141,156,157,158,159,160,161,162,163,178,179,180,181,182,193,194,202,203,206,207,208,209,],[-17,0,-1,-17,-17,-17,-17,-9,-17,-3,-4,-5,-17,-17,-8,-2,-6,-7,-16,-45,-46,-11,-12,-13,-76,-77,-62,-63,-66,-10,-14,-15,-61,-64,-65,-67,-68,-47,-48,-50,-49,-69,-78,-79,-70,-71,-72,-73,-75,-74,]),';':([3,7,8,34,35,36,37,40,41,42,47,48,49,51,52,53,54,59,60,61,62,71,80,100,101,102,103,104,105,106,107,108,109,110,111,112,122,126,127,136,139,140,142,143,149,150,151,152,165,168,169,173,174,195,],[18,22,23,-91,-92,-93,-94,-86,-87,-88,-18,-19,-20,-31,-32,-33,-34,-23,-24,-25,-26,-100,-44,-95,-96,-97,-98,-99,-89,-90,-40,-41,-42,-43,-30,-37,156,157,158,159,160,161,162,163,-27,-28,-29,-21,183,186,187,190,191,-22,]),'}':([4,5,6,9,10,17,18,19,20,21,22,23,24,43,44,45,46,75,120,121,123,124,125,134,135,137,138,141,144,156,157,158,159,160,161,162,163,164,166,167,170,171,172,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,196,197,198,199,200,202,203,206,207,208,209,],[-17,-17,-17,-17,-9,-17,-17,-3,-4,-5,-17,-17,-8,75,-2,-6,-7,-16,-45,-46,-11,-12,-13,-76,-77,-62,-63,-66,-17,-10,-14,-15,-61,-64,-65,-67,-68,182,-17,-17,-17,-57,-17,-47,-48,-50,-49,-69,-17,-52,-53,-17,-17,-56,-58,-17,-17,-78,-79,-51,-54,-55,-59,-60,-70,-71,-72,-73,-75,-74,]),'=':([11,33,89,153,],[25,66,118,177,]),'[':([11,25,50,113,],[26,50,81,81,]),'ADDASSIGN':([11,],[27,]),'SUBASSIGN':([11,],[28,]),'MULASSIGN':([11,],[29,]),'DIVASSIGN':([11,],[30,]),'(':([12,13,15,16,25,26,27,28,29,30,31,32,38,39,50,55,56,57,66,67,68,69,70,73,74,76,77,78,79,81,86,87,88,90,92,93,94,95,96,97,114,118,145,146,175,177,],[31,32,39,39,39,39,39,39,39,39,39,39,39,39,39,86,87,88,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,175,39,39,39,]),'NUMBER':([15,16,25,26,27,28,29,30,31,32,38,39,50,66,67,68,69,70,73,74,76,77,78,79,81,86,87,88,90,92,93,94,95,96,97,114,118,146,175,177,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'FLOATNUMBER':([15,16,25,26,27,28,29,30,31,32,38,39,50,66,67,68,69,70,73,74,76,77,78,79,81,86,87,88,90,92,93,94,95,96,97,114,118,146,175,177,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'-':([15,16,25,26,27,28,29,30,31,32,34,35,36,37,38,39,42,47,50,58,59,60,61,62,64,66,67,68,69,70,71,72,73,74,76,77,78,79,81,85,86,87,88,90,92,93,94,95,96,97,99,100,101,102,103,104,107,108,109,110,114,115,116,117,118,119,128,129,130,131,132,133,146,152,175,176,177,195,],[38,38,38,38,38,38,38,38,38,38,68,-92,-93,-94,38,38,68,68,38,68,68,68,68,68,68,38,38,38,38,38,-100,68,38,38,38,38,38,38,38,68,38,38,38,38,38,38,38,38,38,38,68,-95,-96,-97,-98,-99,68,68,68,68,38,68,68,68,38,68,68,68,68,68,68,68,38,68,38,68,38,68,]),'STRING':([16,73,74,],[41,41,41,]),'ZEROS':([25,],[55,]),'ONES':([25,],[56,]),'EYE':([25,],[57,]),'+':([34,35,36,37,42,47,58,59,60,61,62,64,71,72,85,99,100,101,102,103,104,107,108,109,110,115,116,117,119,128,129,130,131,132,133,152,176,195,],[67,-92,-93,-94,67,67,67,67,67,67,67,67,-100,67,67,67,-95,-96,-97,-98,-99,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'*':([34,35,36,37,42,47,58,59,60,61,62,64,71,72,85,99,100,101,102,103,104,107,108,109,110,115,116,117,119,128,129,130,131,132,133,152,176,195,],[69,-92,-93,-94,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-97,-98,-99,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'/':([34,35,36,37,42,47,58,59,60,61,62,64,71,72,85,99,100,101,102,103,104,107,108,109,110,115,116,117,119,128,129,130,131,132,133,152,176,195,],[70,-92,-93,-94,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-97,-98,-99,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),',':([35,36,37,41,42,58,71,84,85,100,101,102,103,104,112,],[-92,-93,-94,73,74,90,-100,113,114,-95,-96,-97,-98,-99,-37,]),'DOTADD':([35,36,37,47,71,100,101,102,103,104,],[-92,-93,-94,76,-100,-95,-96,-97,-98,-99,]),'DOTSUB':([35,36,37,47,71,100,101,102,103,104,],[-92,-93,-94,77,-100,-95,-96,-97,-98,-99,]),'DOTMUL':([35,36,37,47,71,100,101,102,103,104,],[-92,-93,-94,78,-100,-95,-96,-97,-98,-99,]),'DOTDIV':([35,36,37,47,71,100,101,102,103,104,],[-92,-93,-94,79,-100,-95,-96,-97,-98,-99,]),"'":([35,36,37,47,71,100,101,102,103,104,],[-92,-93,-94,80,-100,-95,-96,-97,-98,-99,]),']':([35,36,37,58,71,82,83,84,85,100,101,102,103,104,112,119,147,148,],[-92,-93,-94,89,-100,111,112,-36,-39,-95,-96,-97,-98,-99,-37,153,-35,-38,]),'EQUAL':([35,36,37,64,71,100,101,102,103,104,],[-92,-93,-94,92,-100,-95,-96,-97,-98,-99,]),'UNEQUAL':([35,36,37,64,71,100,101,102,103,104,],[-92,-93,-94,93,-100,-95,-96,-97,-98,-99,]),'LESSEQUAL':([35,36,37,64,71,100,101,102,103,104,],[-92,-93,-94,94,-100,-95,-96,-97,-98,-99,]),'GREATEREQUAL':([35,36,37,64,71,100,101,102,103,104,],[-92,-93,-94,95,-100,-95,-96,-97,-98,-99,]),'>':([35,36,37,64,71,100,101,102,103,104,],[-92,-93,-94,96,-100,-95,-96,-97,-98,-99,]),'<':([35,36,37,64,71,100,101,102,103,104,],[-92,-93,-94,97,-100,-95,-96,-97,-98,-99,]),')':([35,36,37,63,65,71,72,100,101,102,103,104,115,116,117,128,129,130,131,132,133,192,],[-92,-93,-94,91,98,-100,104,-95,-96,-97,-98,-99,149,150,151,-80,-81,-82,-83,-84,-85,201,]),':':([35,36,37,71,99,100,101,102,103,104,],[-92,-93,-94,-100,146,-95,-96,-97,-98,-99,]),'BREAK':([35,36,37,71,98,100,101,102,103,104,134,135,137,138,141,144,159,160,161,162,163,166,167,170,172,176,182,183,186,187,190,191,193,194,201,202,203,204,205,206,207,208,209,],[-92,-93,-94,-100,142,-95,-96,-97,-98,-99,-76,-77,-62,-63,-66,173,-61,-64,-65,-67,-68,173,173,173,173,142,-69,173,173,173,173,173,-78,-79,142,-70,-71,142,142,-72,-73,-75,-74,]),'CONTINUE':([35,36,37,71,98,100,101,102,103,104,134,135,137,138,141,144,159,160,161,162,163,166,167,170,172,176,182,183,186,187,190,191,193,194,201,202,203,204,205,206,207,208,209,],[-92,-93,-94,-100,143,-95,-96,-97,-98,-99,-76,-77,-62,-63,-66,174,-61,-64,-65,-67,-68,174,174,174,174,143,-69,174,174,174,174,174,-78,-79,143,-70,-71,143,143,-72,-73,-75,-74,]),'ELSE':([75,120,121,123,124,125,134,135,137,138,141,156,157,158,159,160,161,162,163,178,179,180,181,182,193,194,202,203,206,207,208,209,],[-16,154,155,-11,-12,-13,-76,-77,-62,-63,-66,-10,-14,-15,-61,-64,-65,-67,-68,-47,-48,-50,-49,-69,-78,-79,204,205,-72,-73,-75,-74,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'LINE':([0,4,5,6,9,17,18,22,23,],[2,19,20,21,24,43,44,45,46,]),'IDX':([0,4,5,6,9,17,18,22,23,91,98,144,154,155,166,167,170,172,176,183,186,187,190,191,201,204,205,],[3,3,3,3,3,3,3,3,3,122,136,165,122,122,165,165,165,165,136,165,165,165,165,165,136,136,136,]),'IFX':([0,4,5,6,9,17,18,22,23,91,154,155,],[4,4,4,4,4,4,4,4,4,123,123,123,]),'WHILEX':([0,4,5,6,9,17,18,22,23,91,98,144,154,155,166,167,170,172,176,183,186,187,190,191,201,204,205,],[5,5,5,5,5,5,5,5,5,124,137,166,124,124,166,166,166,166,137,166,166,166,166,166,137,137,137,]),'FORX':([0,4,5,6,9,17,18,22,23,91,98,144,154,155,166,167,170,172,176,183,186,187,190,191,201,204,205,],[6,6,6,6,6,6,6,6,6,125,138,167,125,125,167,167,167,167,138,167,167,167,167,167,138,138,138,]),'RETURNX':([0,4,5,6,9,17,18,22,23,91,98,144,154,155,166,167,170,172,176,183,186,187,190,191,201,204,205,],[7,7,7,7,7,7,7,7,7,126,139,168,126,126,168,168,168,168,139,168,168,168,168,168,139,139,139,]),'PRINTX':([0,4,5,6,9,17,18,22,23,91,98,144,154,155,166,167,170,172,176,183,186,187,190,191,201,204,205,],[8,8,8,8,8,8,8,8,8,127,140,169,127,127,169,169,169,169,140,169,169,169,169,169,140,140,140,]),'BLOCK':([0,4,5,6,9,17,18,22,23,91,154,155,],[9,9,9,9,9,9,9,9,9,121,179,180,]),'EMPTY':([0,4,5,6,9,17,18,22,23,144,166,167,170,172,183,186,187,190,191,],[10,10,10,10,10,10,10,10,10,171,171,171,171,171,171,171,171,171,171,]),'EXPRESSION':([15,16,25,26,27,28,29,30,31,32,38,39,50,66,67,68,69,70,73,74,76,77,78,79,81,86,87,88,90,92,93,94,95,96,97,114,118,146,175,177,],[34,42,47,58,59,60,61,62,64,64,71,72,85,99,100,101,102,103,42,42,107,108,109,110,85,115,116,117,119,128,129,130,131,132,133,85,152,176,64,195,]),'PRINTMANY':([16,73,74,],[40,105,106,]),'MATRIX':([25,],[48,]),'TABLE':([25,50,113,],[49,84,84,]),'MATRIXEXPR':([25,],[51,]),'ZEROSX':([25,],[52,]),'ONESX':([25,],[53,]),'EYEX':([25,],[54,]),'CONDITION':([31,32,175,],[63,65,192,]),'MATRIXINSIDE':([50,113,],[82,147,]),'VALUES':([50,81,114,],[83,83,148,]),'ONELINE':([91,154,155,],[120,178,181,]),'ONELOOPLINE':([98,176,201,204,205,],[134,193,202,206,209,]),'LOOPBLOCK':([98,144,166,167,170,172,176,183,186,187,190,191,201,204,205,],[135,170,170,170,170,170,194,170,170,170,170,170,203,207,208,]),'LOOPIFX':([98,144,166,167,170,172,176,183,186,187,190,191,201,204,205,],[141,172,172,172,172,172,141,172,172,172,172,172,141,141,141,]),'LOOPLINE':([144,166,167,170,172,183,186,187,190,191,],[164,184,185,188,189,196,197,198,199,200,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> LINE','start',1,'p_start','Mparser.py',34),
  ('LINE -> IDX ; LINE','LINE',3,'p_line','Mparser.py',38),
  ('LINE -> IFX LINE','LINE',2,'p_line','Mparser.py',39),
  ('LINE -> WHILEX LINE','LINE',2,'p_line','Mparser.py',40),
  ('LINE -> FORX LINE','LINE',2,'p_line','Mparser.py',41),
  ('LINE -> RETURNX ; LINE','LINE',3,'p_line','Mparser.py',42),
  ('LINE -> PRINTX ; LINE','LINE',3,'p_line','Mparser.py',43),
  ('LINE -> BLOCK LINE','LINE',2,'p_line','Mparser.py',44),
  ('LINE -> EMPTY','LINE',1,'p_line','Mparser.py',45),
  ('ONELINE -> IDX ;','ONELINE',2,'p_oneline','Mparser.py',50),
  ('ONELINE -> IFX','ONELINE',1,'p_oneline','Mparser.py',51),
  ('ONELINE -> WHILEX','ONELINE',1,'p_oneline','Mparser.py',52),
  ('ONELINE -> FORX','ONELINE',1,'p_oneline','Mparser.py',53),
  ('ONELINE -> RETURNX ;','ONELINE',2,'p_oneline','Mparser.py',54),
  ('ONELINE -> PRINTX ;','ONELINE',2,'p_oneline','Mparser.py',55),
  ('BLOCK -> { LINE }','BLOCK',3,'p_block','Mparser.py',60),
  ('EMPTY -> <empty>','EMPTY',0,'p_empty','Mparser.py',65),
  ('IDX -> ID = EXPRESSION','IDX',3,'p_idx_assign','Mparser.py',70),
  ('IDX -> ID = MATRIX','IDX',3,'p_idx_assign','Mparser.py',71),
  ('IDX -> ID = TABLE','IDX',3,'p_idx_assign','Mparser.py',72),
  ('IDX -> ID [ EXPRESSION ] = EXPRESSION','IDX',6,'p_idx_assign','Mparser.py',73),
  ('IDX -> ID [ EXPRESSION , EXPRESSION ] = EXPRESSION','IDX',8,'p_idx_assign','Mparser.py',74),
  ('IDX -> ID ADDASSIGN EXPRESSION','IDX',3,'p_idx_opassign','Mparser.py',79),
  ('IDX -> ID SUBASSIGN EXPRESSION','IDX',3,'p_idx_opassign','Mparser.py',80),
  ('IDX -> ID MULASSIGN EXPRESSION','IDX',3,'p_idx_opassign','Mparser.py',81),
  ('IDX -> ID DIVASSIGN EXPRESSION','IDX',3,'p_idx_opassign','Mparser.py',82),
  ('ZEROSX -> ZEROS ( EXPRESSION )','ZEROSX',4,'p_zerosx','Mparser.py',91),
  ('ONESX -> ONES ( EXPRESSION )','ONESX',4,'p_onesx','Mparser.py',96),
  ('EYEX -> EYE ( EXPRESSION )','EYEX',4,'p_eyex','Mparser.py',101),
  ('MATRIX -> [ MATRIXINSIDE ]','MATRIX',3,'p_matrix','Mparser.py',106),
  ('MATRIX -> MATRIXEXPR','MATRIX',1,'p_matrix','Mparser.py',107),
  ('MATRIX -> ZEROSX','MATRIX',1,'p_matrix','Mparser.py',108),
  ('MATRIX -> ONESX','MATRIX',1,'p_matrix','Mparser.py',109),
  ('MATRIX -> EYEX','MATRIX',1,'p_matrix','Mparser.py',110),
  ('MATRIXINSIDE -> TABLE , MATRIXINSIDE','MATRIXINSIDE',3,'p_matrixinside','Mparser.py',115),
  ('MATRIXINSIDE -> TABLE','MATRIXINSIDE',1,'p_matrixinside','Mparser.py',116),
  ('TABLE -> [ VALUES ]','TABLE',3,'p_table','Mparser.py',120),
  ('VALUES -> EXPRESSION , VALUES','VALUES',3,'p_values','Mparser.py',124),
  ('VALUES -> EXPRESSION','VALUES',1,'p_values','Mparser.py',125),
  ('MATRIXEXPR -> EXPRESSION DOTADD EXPRESSION','MATRIXEXPR',3,'p_matrixop','Mparser.py',142),
  ('MATRIXEXPR -> EXPRESSION DOTSUB EXPRESSION','MATRIXEXPR',3,'p_matrixop','Mparser.py',143),
  ('MATRIXEXPR -> EXPRESSION DOTMUL EXPRESSION','MATRIXEXPR',3,'p_matrixop','Mparser.py',144),
  ('MATRIXEXPR -> EXPRESSION DOTDIV EXPRESSION','MATRIXEXPR',3,'p_matrixop','Mparser.py',145),
  ("MATRIXEXPR -> EXPRESSION '",'MATRIXEXPR',2,'p_matrixop','Mparser.py',146),
  ('IFX -> IF ( CONDITION ) ONELINE','IFX',5,'p_ifx_if','Mparser.py',151),
  ('IFX -> IF ( CONDITION ) BLOCK','IFX',5,'p_ifx_if','Mparser.py',152),
  ('IFX -> IF ( CONDITION ) ONELINE ELSE ONELINE','IFX',7,'p_ifx_if','Mparser.py',153),
  ('IFX -> IF ( CONDITION ) ONELINE ELSE BLOCK','IFX',7,'p_ifx_if','Mparser.py',154),
  ('IFX -> IF ( CONDITION ) BLOCK ELSE ONELINE','IFX',7,'p_ifx_if','Mparser.py',155),
  ('IFX -> IF ( CONDITION ) BLOCK ELSE BLOCK','IFX',7,'p_ifx_if','Mparser.py',156),
  ('LOOPLINE -> IDX ; LOOPLINE','LOOPLINE',3,'p_loopline','Mparser.py',161),
  ('LOOPLINE -> WHILEX LOOPLINE','LOOPLINE',2,'p_loopline','Mparser.py',162),
  ('LOOPLINE -> FORX LOOPLINE','LOOPLINE',2,'p_loopline','Mparser.py',163),
  ('LOOPLINE -> RETURNX ; LOOPLINE','LOOPLINE',3,'p_loopline','Mparser.py',164),
  ('LOOPLINE -> PRINTX ; LOOPLINE','LOOPLINE',3,'p_loopline','Mparser.py',165),
  ('LOOPLINE -> LOOPBLOCK LOOPLINE','LOOPLINE',2,'p_loopline','Mparser.py',166),
  ('LOOPLINE -> EMPTY','LOOPLINE',1,'p_loopline','Mparser.py',167),
  ('LOOPLINE -> LOOPIFX LOOPLINE','LOOPLINE',2,'p_loopline','Mparser.py',168),
  ('LOOPLINE -> BREAK ; LOOPLINE','LOOPLINE',3,'p_loopline','Mparser.py',169),
  ('LOOPLINE -> CONTINUE ; LOOPLINE','LOOPLINE',3,'p_loopline','Mparser.py',170),
  ('ONELOOPLINE -> IDX ;','ONELOOPLINE',2,'p_oneloopline','Mparser.py',175),
  ('ONELOOPLINE -> WHILEX','ONELOOPLINE',1,'p_oneloopline','Mparser.py',176),
  ('ONELOOPLINE -> FORX','ONELOOPLINE',1,'p_oneloopline','Mparser.py',177),
  ('ONELOOPLINE -> RETURNX ;','ONELOOPLINE',2,'p_oneloopline','Mparser.py',178),
  ('ONELOOPLINE -> PRINTX ;','ONELOOPLINE',2,'p_oneloopline','Mparser.py',179),
  ('ONELOOPLINE -> LOOPIFX','ONELOOPLINE',1,'p_oneloopline','Mparser.py',180),
  ('ONELOOPLINE -> BREAK ;','ONELOOPLINE',2,'p_oneloopline','Mparser.py',181),
  ('ONELOOPLINE -> CONTINUE ;','ONELOOPLINE',2,'p_oneloopline','Mparser.py',182),
  ('LOOPBLOCK -> { LOOPLINE }','LOOPBLOCK',3,'p_loopblock','Mparser.py',187),
  ('LOOPIFX -> IF ( CONDITION ) ONELOOPLINE','LOOPIFX',5,'p_loopifx_if','Mparser.py',191),
  ('LOOPIFX -> IF ( CONDITION ) LOOPBLOCK','LOOPIFX',5,'p_loopifx_if','Mparser.py',192),
  ('LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE','LOOPIFX',7,'p_loopifx_if','Mparser.py',193),
  ('LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK','LOOPIFX',7,'p_loopifx_if','Mparser.py',194),
  ('LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE','LOOPIFX',7,'p_loopifx_if','Mparser.py',195),
  ('LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK','LOOPIFX',7,'p_loopifx_if','Mparser.py',196),
  ('WHILEX -> WHILE ( CONDITION ) ONELOOPLINE','WHILEX',5,'p_whilex','Mparser.py',201),
  ('WHILEX -> WHILE ( CONDITION ) LOOPBLOCK','WHILEX',5,'p_whilex','Mparser.py',202),
  ('FORX -> FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE','FORX',7,'p_forx','Mparser.py',207),
  ('FORX -> FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK','FORX',7,'p_forx','Mparser.py',208),
  ('CONDITION -> EXPRESSION EQUAL EXPRESSION','CONDITION',3,'p_condition','Mparser.py',213),
  ('CONDITION -> EXPRESSION UNEQUAL EXPRESSION','CONDITION',3,'p_condition','Mparser.py',214),
  ('CONDITION -> EXPRESSION LESSEQUAL EXPRESSION','CONDITION',3,'p_condition','Mparser.py',215),
  ('CONDITION -> EXPRESSION GREATEREQUAL EXPRESSION','CONDITION',3,'p_condition','Mparser.py',216),
  ('CONDITION -> EXPRESSION > EXPRESSION','CONDITION',3,'p_condition','Mparser.py',217),
  ('CONDITION -> EXPRESSION < EXPRESSION','CONDITION',3,'p_condition','Mparser.py',218),
  ('PRINTX -> PRINT PRINTMANY','PRINTX',2,'p_printx','Mparser.py',223),
  ('PRINTMANY -> STRING','PRINTMANY',1,'p_printmany','Mparser.py',227),
  ('PRINTMANY -> EXPRESSION','PRINTMANY',1,'p_printmany','Mparser.py',228),
  ('PRINTMANY -> STRING , PRINTMANY','PRINTMANY',3,'p_printmany','Mparser.py',229),
  ('PRINTMANY -> EXPRESSION , PRINTMANY','PRINTMANY',3,'p_printmany','Mparser.py',230),
  ('RETURNX -> RETURN EXPRESSION','RETURNX',2,'p_returnx_return','Mparser.py',235),
  ('EXPRESSION -> NUMBER','EXPRESSION',1,'p_expression_number','Mparser.py',242),
  ('EXPRESSION -> FLOATNUMBER','EXPRESSION',1,'p_expression_float','Mparser.py',247),
  ('EXPRESSION -> ID','EXPRESSION',1,'p_expression_id','Mparser.py',252),
  ('EXPRESSION -> EXPRESSION + EXPRESSION','EXPRESSION',3,'p_expression_sum','Mparser.py',257),
  ('EXPRESSION -> EXPRESSION - EXPRESSION','EXPRESSION',3,'p_expression_sum','Mparser.py',258),
  ('EXPRESSION -> EXPRESSION * EXPRESSION','EXPRESSION',3,'p_expression_mul','Mparser.py',262),
  ('EXPRESSION -> EXPRESSION / EXPRESSION','EXPRESSION',3,'p_expression_mul','Mparser.py',263),
  ('EXPRESSION -> ( EXPRESSION )','EXPRESSION',3,'p_expression_group','Mparser.py',267),
  ('EXPRESSION -> - EXPRESSION','EXPRESSION',2,'p_expression_unarynegation','Mparser.py',272),
]
